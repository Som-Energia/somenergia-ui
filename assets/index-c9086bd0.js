import{j as n}from"./jsx-runtime-f6d73c06.js";import{M as i,d as s}from"./index-0fc2529a.js";import{u as r}from"./index-b7a9f960.js";import"./index-8ee6c85d.js";import"./_commonjsHelpers-de833af9.js";import"./iframe-fc02a633.js";import"../sb-preview/runtime.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-40590036.js";import"./index-8bf7f4ad.js";import"./index-11d98b33.js";import"./assertThisInitialized-33acfce7.js";import"./_baseIsEqual-2b2ffab4.js";import"./mapValues-7df64b2c.js";import"./_baseUniq-de37e305.js";import"./index-356e4a49.js";import"./index-556aefe8.js";const a="# somenergia-ui\n\nCommon React/MUI components for Som Energia UI projects\n\n[Documentation](https://som-energia.github.io/somenergia-ui)\n\n## Install\n\n```bash\nnpm install --save @somenergia/somenergia-ui\n```\n\n## Adding dependencies\n\n- Do not add them in `package.json`'s `dependencies` key\n- Add them both in `peerDependencies` and `developmentDependencies`\n- Ensure they are filtered by the `externals` in `vite-config.js`' `build.rollupOptions.externals`\n- If the build creates a `vendor-***.js` as output, means that you failed to filter it\n- To know wich module is generating the `vendor-***.js`, you can get the name of the library\nby uncomenting the code in `vite-config.js` (`build.rollupOptions.output.manualChunks`)\n\n## Using unreleased components in another project\n\nFirst build the library locally\n\n```bash\nnpm run build\n```\n\nFrom the other project run:\n\n```bash\nnpm install ../somenergia-ui\n```\n\n## Release process\n\n- Update version package.json and CHANGES.md\n- Tag the release somenergia-ui-M.m.p\n- On pushing the version tag, automated CI will publish the package in npm\n- Right now the storybook of the CI is failing so the following command must be run by hand\n\n```bash\nnpm run deploy-storybook\n```\n";function o(e){return n.jsxs(n.Fragment,{children:[n.jsx(i,{title:"README"}),`
`,n.jsx(s,{children:a})]})}function C(e={}){const{wrapper:t}=Object.assign({},r(),e.components);return t?n.jsx(t,Object.assign({},e,{children:n.jsx(o,e)})):o()}export{C as default};
